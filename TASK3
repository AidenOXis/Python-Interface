import tkinter as tk

class IsulinometroApp(tk.Tk):

    def __init__(self):
        super().__init__()

        # Imposta la geometria della finestra
        self.geometry("800x400")
        self.wm_minsize(600, 300)  # Set minimum window size (600x300)

        # Permette il ridimensionamento della finestra
        self.grid_rowconfigure(0, weight=1)
        self.grid_columnconfigure(0, weight=1)

        # Titolo finestra
        self.title("Insulinometro")

        # Inizializzazione di due frame per le modalità Home e Data
        self.home_frame = tk.Frame(self)
        self.data_frame = tk.Frame(self)
        self.help_frame = tk.Frame(self)  # Aggiunto frame Help

        # Chiamata per la creazione dei widget nei due frame
        self.create_home_frame()
        self.create_data_frame()
        self.create_help_frame()  # Aggiunta chiamata per creare il frame Help

        # Imposta il layout del frame principale
        for frame in (self.home_frame, self.data_frame, self.help_frame):
            frame.grid(row=0, column=0, sticky='nsew')

        # Mostra il frame "home" inizialmente
        self.show_frame(self.home_frame)

    # Funzione per stampare il nome del bottone cliccato
    def on_button_click(self, button_name):
        print(f"Button '{button_name}' clicked")

    def create_home_frame(self):
        # Configura layout del frame "home"
        self.home_frame.columnconfigure(0, weight=1)
        self.home_frame.columnconfigure(1, weight=1)
        self.home_frame.columnconfigure(2, weight=1)
        self.home_frame.rowconfigure(0, weight=0)
        self.home_frame.rowconfigure(1, weight=0)
        self.home_frame.rowconfigure(2, weight=0)
        self.home_frame.rowconfigure(2, minsize=50)
        self.home_frame.rowconfigure(3, weight=0)
        self.home_frame.rowconfigure(3, minsize=50)
        self.home_frame.rowconfigure(4, weight=0)
        self.home_frame.rowconfigure(5, weight=1)
        self.home_frame.rowconfigure(6, weight=0)

        # Tab per cambiare modalità
        tab = tk.Frame(self.home_frame, height=60, bg="white")
        tab.grid(column=0, row=0, columnspan=3, rowspan=1, padx=10, pady=2, sticky="nesw")

        # Aggiungo configurazione del layout del tab per ridimensionamento
        tab.columnconfigure(0, weight=1)
        tab.columnconfigure(1, weight=1)
        tab.columnconfigure(2, weight=1)  # Aggiunto per il pulsante Help

        # Aggiunta pulsanti switch modalità con on_button_click
        btn_home = tk.Button(tab, text="Home", command=lambda: [self.on_button_click("Home"), self.show_frame(self.home_frame)], height=2, width=10, bg="gray")
        btn_home.grid(column=0, row=0, sticky="nesw", padx=10, pady=2)

        btn_data = tk.Button(tab, text="Data", command=lambda: [self.on_button_click("Data"), self.show_frame(self.data_frame)], height=2, width=10)
        btn_data.grid(column=1, row=0, sticky="nesw", padx=10, pady=2)

        # Aggiunta pulsante Help con on_button_click
        btn_help = tk.Button(tab, text="Help", command=lambda: [self.on_button_click("Help"), self.show_frame(self.help_frame)], height=2, width=10)
        btn_help.grid(column=2, row=0, sticky="nesw", padx=10, pady=2)

        # Resto del codice di layout e frame non modificato...
        # (continuare con il layout dei frame come da codice originale)

    def create_data_frame(self):
        # Configurazione layout per il frame "data"
        self.data_frame.columnconfigure(0, weight=1)
        self.data_frame.columnconfigure(1, weight=1)
        self.data_frame.rowconfigure(0, weight=0)  # Riga per il tab
        self.data_frame.rowconfigure(1, minsize=20)
        self.data_frame.rowconfigure(2, weight=3)
        self.data_frame.rowconfigure(3, weight=3)
        self.data_frame.rowconfigure(4, minsize=50)
        self.data_frame.rowconfigure(5, weight=1)  # Riga per il log delle attività

        # Tab per cambiare modalità con on_button_click
        tab = tk.Frame(self.data_frame, height=60, bg="white")
        tab.grid(column=0, row=0, columnspan=2, padx=10, pady=2, sticky="nesw")

        # Configura il layout del tab per il ridimensionamento
        tab.columnconfigure(0, weight=1)
        tab.columnconfigure(1, weight=1)
        tab.columnconfigure(2, weight=1)  # Aggiunto per il pulsante Help

        # Aggiungi i pulsanti per cambiare modalità con on_button_click
        btn_home = tk.Button(tab, text="Home", command=lambda: [self.on_button_click("Home"), self.show_frame(self.home_frame)], height=2, width=10)
        btn_home.grid(column=0, row=0, sticky="nesw", padx=10, pady=2)

        btn_data = tk.Button(tab, text="Data", command=lambda: [self.on_button_click("Data"), self.show_frame(self.data_frame)], height=2, width=10, bg="gray")
        btn_data.grid(column=1, row=0, sticky="nesw", padx=10, pady=2)

        btn_help = tk.Button(tab, text="Help", command=lambda: [self.on_button_click("Help"), self.show_frame(self.help_frame)], height=2, width=10)
        btn_help.grid(column=2, row=0, sticky="nesw", padx=10, pady=2)

    def create_help_frame(self):
        """ Creazione del frame Help """
        self.help_frame.columnconfigure(0, weight=1)
        self.help_frame.columnconfigure(1, weight=1)
        self.help_frame.columnconfigure(2, weight=1)
        self.help_frame.rowconfigure(0, weight=0)
        self.help_frame.rowconfigure(1, weight=1)

        # Tab per cambiare modalità con on_button_click
        tab = tk.Frame(self.help_frame, height=60, bg="white")
        tab.grid(column=0, row=0, columnspan=3, rowspan=1, padx=10, pady=2, sticky="nesw")

        # Aggiungo configurazione del layout del tab per ridimensionamento
        tab.columnconfigure(0, weight=1)
        tab.columnconfigure(1, weight=1)
        tab.columnconfigure(2, weight=1)  # Aggiunto per il pulsante Help

        # Aggiunta pulsanti switch modalità (Home, Data, Help) con on_button_click
        btn_home = tk.Button(tab, text="Home", command=lambda: [self.on_button_click("Home"), self.show_frame(self.home_frame)], height=2, width=10)
        btn_home.grid(column=0, row=0, sticky="nesw", padx=10, pady=2)

        btn_data = tk.Button(tab, text="Data", command=lambda: [self.on_button_click("Data"), self.show_frame(self.data_frame)], height=2, width=10)
        btn_data.grid(column=1, row=0, sticky="nesw", padx=10, pady=2)

        btn_help = tk.Button(tab, text="Help", command=lambda: [self.on_button_click("Help"), self.show_frame(self.help_frame)], height=2, width=10, bg="gray")
        btn_help.grid(column=2, row=0, sticky="nesw", padx=10, pady=2)

        # Testo Help
        help_label = tk.Label(self.help_frame, text="Help Section: qui si trova il testo di aiuto", bg="lightyellow")
        help_label.grid(column=0, row=1, columnspan=3, padx=20, pady=20, sticky="nesw")

    def show_frame(self, frame):
        """ Mostra il frame selezionato """
        frame.tkraise()

    def start_button_click(self):
        pass

    def exit_button_click(self):
        self.quit()


if __name__ == "__main__":
    app = IsulinometroApp()
    app.mainloop()
